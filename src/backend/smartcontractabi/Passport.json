{
  "contractName": "Passport",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "countryCode",
          "type": "string"
        }
      ],
      "name": "countryRegistrationSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "UUID",
          "type": "string"
        }
      ],
      "name": "passportCreationSuccess",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "country",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "countryCode",
          "type": "string"
        }
      ],
      "name": "registerCountry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "UUID",
          "type": "string"
        }
      ],
      "name": "createPassport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "UUID",
          "type": "string"
        }
      ],
      "name": "viewPassport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "UUID",
          "type": "string"
        }
      ],
      "name": "freezePassport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "UUID",
          "type": "string"
        },
        {
          "internalType": "enum Passport.Action",
          "name": "action",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "addTravelHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "countryAddress",
          "type": "address"
        }
      ],
      "name": "viewRegisteredCountry",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "abc",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"countryCode\",\"type\":\"string\"}],\"name\":\"countryRegistrationSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"UUID\",\"type\":\"string\"}],\"name\":\"passportCreationSuccess\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"abc\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"UUID\",\"type\":\"string\"},{\"internalType\":\"enum Passport.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"addTravelHistory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"UUID\",\"type\":\"string\"}],\"name\":\"createPassport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"UUID\",\"type\":\"string\"}],\"name\":\"freezePassport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"country\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"countryCode\",\"type\":\"string\"}],\"name\":\"registerCountry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"UUID\",\"type\":\"string\"}],\"name\":\"viewPassport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"countryAddress\",\"type\":\"address\"}],\"name\":\"viewRegisteredCountry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeMint(address,uint256)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeMint(address,uint256,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{\"registerCountry(address,string)\":{\"notice\":\"Add new country - to list + as minter Create passport All passports are owned by the country right? Yup Indiv user is just read only? They will read only through the UI that we provide right? Yup the country that they are in will own the passport\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Lim Shan Jing/Desktop/IS4302/cryptyPassta/src/blockchain/contracts/Passport.sol\":\"Passport\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Lim Shan Jing/Desktop/IS4302/cryptyPassta/src/blockchain/contracts/Passport.sol\":{\"keccak256\":\"0xa88ee5c1917099ce2b81131682320d2f32132b15b1c40dc3ad93f29555fabd1e\",\"urls\":[\"bzz-raw://a36344c0037cb50b32ab42deb0da6b36489113a2b4aa143ecebd08876d155eb8\",\"dweb:/ipfs/Qmeo8Tu6WgVti2Pp7NZoi2G7LARUkATnxCatvZupWcd4k1\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzz-raw://9a169446f024a24c3e5146cbeefea6be3bbbe9ba836f98f9d0c64af9f10773c4\",\"dweb:/ipfs/QmWibincTepM31suKeF6bd3shbPGjc9E7uULaXQBY1eNX5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzz-raw://cbb33c4aa1ba8470e389a79702b1b0450c03acd0e9471ed3ae5d566a958d36a4\",\"dweb:/ipfs/QmXryp8Ncftr8WYt7vWwoFQVKnbxtQ7dQBHzfzgWWYGisK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0xdd9d2d0f7fac88b5704044983443c052810b397e6383535711a9162302c32d03\",\"urls\":[\"bzz-raw://3082c4ead86756c5aa19e6734117394dc230d4f92c16537a402dfb57579e5d72\",\"dweb:/ipfs/QmbGubkvZ8FouoNjrBGsVmJskPXYcYXa1MkWCktwxbd4tU\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f50617373706f72740000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f50415353000000000000000000000000000000000000000000000000000000008152508181620000986301ffc9a760e01b6200017d60201b60201c565b620000b06380ac58cd60e01b6200017d60201b60201c565b620000c863780e9d6360e01b6200017d60201b60201c565b8160099080519060200190620000e0929190620004b3565b5080600a9080519060200190620000f9929190620004b3565b5062000112635b5e139f60e01b6200017d60201b60201c565b50505050620001366200012a6200028660201b60201c565b6200028e60201b60201c565b33600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000562565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b620002a981600d620002ef60201b62003b0d1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620003018282620003d360201b60201c565b1562000375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620049ce6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004f657805160ff191683800117855562000527565b8280016001018555821562000527579182015b828111156200052657825182559160200191906001019062000509565b5b5090506200053691906200053a565b5090565b6200055f91905b808211156200055b57600081600090555060010162000541565b5090565b90565b61445c80620005726000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80639227793311610104578063b560c18c116100a2578063cae884b711610071578063cae884b714610e10578063d1b2b60c14610ecd578063d77fdb2414610f9f578063e985e9c51461107a576101da565b8063b560c18c14610aee578063b88d4fde14610ba9578063bcfe57d314610cae578063c87b56dd14610d69576101da565b806398650275116100de57806398650275146109d2578063a1448194146109dc578063a22cb46514610a42578063aa271e1a14610a92576101da565b8063922779331461088857806395d89b411461090b578063983b2d561461098e576101da565b8063344c50791161017c5780636352211e1161014b5780636352211e146106425780636c0360eb146106b057806370a08231146107335780638832e6e31461078b576101da565b8063344c50791461047157806340c10f191461052c57806342842e0e146105925780634f6ccce714610600576101da565b8063095ea7b3116101b8578063095ea7b31461033557806318160ddd1461038357806323b872dd146103a15780632f745c591461040f576101da565b806301ffc9a7146101df57806306fdde0314610244578063081812fc146102c7575b600080fd5b61022a600480360360208110156101f557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506110f6565b604051808215151515815260200191505060405180910390f35b61024c61115d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028c578082015181840152602081019050610271565b50505050905090810190601f1680156102b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f3600480360360208110156102dd57600080fd5b81019080803590602001909291905050506111ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061129a565b005b61038b611481565b6040518082815260200191505060405180910390f35b61040d600480360360608110156103b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061148e565b005b61045b6004803603604081101561042557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611504565b6040518082815260200191505060405180910390f35b61052a6004803603602081101561048757600080fd5b81019080803590602001906401000000008111156104a457600080fd5b8201836020820111156104b657600080fd5b803590602001918460018302840111640100000000831117156104d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115c3565b005b6105786004803603604081101561054257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118a9565b604051808215151515815260200191505060405180910390f35b6105fe600480360360608110156105a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611924565b005b61062c6004803603602081101561061657600080fd5b8101908080359060200190929190505050611944565b6040518082815260200191505060405180910390f35b61066e6004803603602081101561065857600080fd5b81019080803590602001909291905050506119c4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106b8611a8c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106f85780820151818401526020810190506106dd565b50505050905090810190601f1680156107255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107756004803603602081101561074957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2e565b6040518082815260200191505060405180910390f35b61086e600480360360608110156107a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107e857600080fd5b8201836020820111156107fa57600080fd5b8035906020019184600183028401116401000000008311171561081c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c03565b604051808215151515815260200191505060405180910390f35b610890611c80565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108d05780820151818401526020810190506108b5565b50505050905090810190601f1680156108fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610913611cc2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610953578082015181840152602081019050610938565b50505050905090810190601f1680156109805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109d0600480360360208110156109a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d64565b005b6109da611dd5565b005b610a28600480360360408110156109f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611de7565b604051808215151515815260200191505060405180910390f35b610a9060048036036040811015610a5857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611e62565b005b610ad460048036036020811015610aa857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061201a565b604051808215151515815260200191505060405180910390f35b610ba760048036036020811015610b0457600080fd5b8101908080359060200190640100000000811115610b2157600080fd5b820183602082011115610b3357600080fd5b80359060200191846001830284011164010000000083111715610b5557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612037565b005b610cac60048036036080811015610bbf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c2657600080fd5b820183602082011115610c3857600080fd5b80359060200191846001830284011164010000000083111715610c5a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612212565b005b610d6760048036036020811015610cc457600080fd5b8101908080359060200190640100000000811115610ce157600080fd5b820183602082011115610cf357600080fd5b80359060200191846001830284011164010000000083111715610d1557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061228a565b005b610d9560048036036020811015610d7f57600080fd5b8101908080359060200190929190505050612551565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dd5578082015181840152602081019050610dba565b50505050905090810190601f168015610e025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e5260048036036020811015610e2657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612753565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e92578082015181840152602081019050610e77565b50505050905090810190601f168015610ebf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f9d60048036036060811015610ee357600080fd5b8101908080359060200190640100000000811115610f0057600080fd5b820183602082011115610f1257600080fd5b80359060200191846001830284011164010000000083111715610f3457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001909291905050506128e3565b005b61107860048036036040811015610fb557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ff257600080fd5b82018360208201111561100457600080fd5b8035906020019184600183028401116401000000008311171561102657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506129df565b005b6110dc6004803603604081101561109057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612bc5565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f55780601f106111ca576101008083540402835291602001916111f5565b820191906000526020600020905b8154815290600101906020018083116111d857829003601f168201915b5050505050905090565b600061120a82612c59565b61125f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806142b8602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006112a5826119c4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561132c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061435e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661134b612ccb565b73ffffffffffffffffffffffffffffffffffffffff16148061137a575061137981611374612ccb565b612bc5565b5b6113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806141516038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b61149f611499612ccb565b82612cd3565b6114f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061437f6031913960400191505060405180910390fd5b6114ff838383612dc7565b505050565b600061150f83611b2e565b8210611566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061402e602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106115b057fe5b9060005260206000200154905092915050565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061425f602e913960400191505060405180910390fd5b60006010826040518082805190602001908083835b602083106116a0578051825260208201915060208101905060208303925061167d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054141561172b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061408b603a913960400191505060405180910390fd5b611733613ef1565b6001816000019015159081151581525050600081602001818152505033816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006011829080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548160ff0219169083151502179055506020820151816002015560408201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509050806010846040518082805190602001908083835b602083106118635780518252602082019150602081019050602083039250611840565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055506118a43382612deb565b505050565b60006118bb6118b6612ccb565b61201a565b611910576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806141dc6030913960400191505060405180910390fd5b61191a8383612deb565b6001905092915050565b61193f83838360405180602001604052806000815250612212565b505050565b600061194e611481565b82106119a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806143b0602c913960400191505060405180910390fd5b600782815481106119b257fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806141b36029913960400191505060405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b245780601f10611af957610100808354040283529160200191611b24565b820191906000526020600020905b815481529060010190602001808311611b0757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614189602a913960400191505060405180910390fd5b611bfc600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612e0c565b9050919050565b6000611c15611c10612ccb565b61201a565b611c6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806141dc6030913960400191505060405180910390fd5b611c75848484612e1a565b600190509392505050565b6060806040518060400160405280600381526020017f616263000000000000000000000000000000000000000000000000000000000081525090508091505090565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d5a5780601f10611d2f57610100808354040283529160200191611d5a565b820191906000526020600020905b815481529060010190602001808311611d3d57829003601f168201915b5050505050905090565b611d74611d6f612ccb565b61201a565b611dc9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806141dc6030913960400191505060405180910390fd5b611dd281612e8b565b50565b611de5611de0612ccb565b612ee5565b565b6000611df9611df4612ccb565b61201a565b611e4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806141dc6030913960400191505060405180910390fd5b611e588383612f3f565b6001905092915050565b611e6a612ccb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000611f18612ccb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611fc5612ccb565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600061203082600d612f5d90919063ffffffff16565b9050919050565b60006010826040518082805190602001908083835b6020831061206f578051825260208201915060208101905060208303925061204c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414156120fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806143ff6029913960400191505060405180910390fd5b612102613ef1565b60116010836040518082805190602001908083835b6020831061213a5780518252602082019150602081019050602083039250612117565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548154811061217857fe5b90600052602060002090600402016040518060600160405290816000820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505050565b61222361221d612ccb565b83612cd3565b612278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061437f6031913960400191505060405180910390fd5b6122848484848461303b565b50505050565b803373ffffffffffffffffffffffffffffffffffffffff1660116010836040518082805190602001908083835b602083106122da57805182526020820191506020810190506020830392506122b7565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020548154811061231857fe5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180614115603c913960400191505060405180910390fd5b60011515601160016010856040518082805190602001908083835b602083106123f457805182526020820191506020810190506020830392506123d1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054038154811061243357fe5b906000526020600020906004020160000160009054906101000a900460ff161515146124aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061422d6032913960400191505060405180910390fd5b6000601160016010856040518082805190602001908083835b602083106124e657805182526020820191506020810190506020830392506124c3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054038154811061252557fe5b906000526020600020906004020160000160006101000a81548160ff0219169083151502179055505050565b606061255c82612c59565b6125b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061432f602f913960400191505060405180910390fd5b6060600c60008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561265a5780601f1061262f5761010080835404028352916020019161265a565b820191906000526020600020905b81548152906001019060200180831161263d57829003601f168201915b50505050509050600081511415612683576040518060200160405280600081525091505061274e565b600b8160405160200180838054600181600116156101000203166002900480156126e45780601f106126c25761010080835404028352918201916126e4565b820191906000526020600020905b8154815290600101906020018083116126d0575b505082805190602001908083835b6020831061271557805182526020820191506020810190506020830392506126f2565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b606060011515600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514612801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061428d602b913960400191505060405180910390fd5b600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128d75780601f106128ac576101008083540402835291602001916128d7565b820191906000526020600020905b8154815290600101906020018083116128ba57829003601f168201915b50505050509050919050565b823373ffffffffffffffffffffffffffffffffffffffff1661296d6010836040518082805190602001908083835b602083106129345780518252602082019150602081019050602083039250612911565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020546119c4565b73ffffffffffffffffffffffffffffffffffffffff16146129d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613ffc6032913960400191505060405180910390fd5b50505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612a85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806143dc6023913960400191505060405180910390fd5b604051806040016040528060011515815260200182815250600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001019080519060200190612b18929190613f2a565b50905050612b2582611d64565b7f4deffd3c5a1de60d7fa261c9c0f6c9b4ecedf6547b59276231029009e3a7f57a816040518080602001828103825283818151815260200191508051906020019080838360005b83811015612b87578082015181840152602081019050612b6c565b50505050905090810190601f168015612bb45780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000612cde82612c59565b612d33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806140e9602c913960400191505060405180910390fd5b6000612d3e836119c4565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612dad57508373ffffffffffffffffffffffffffffffffffffffff16612d95846111ff565b73ffffffffffffffffffffffffffffffffffffffff16145b80612dbe5750612dbd8185612bc5565b5b91505092915050565b612dd28383836130ad565b612ddc8382613308565b612de682826134a6565b505050565b612df5828261356d565b612dff82826134a6565b612e0881613785565b5050565b600081600001549050919050565b612e248383612deb565b612e3160008484846137d1565b612e86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806140596032913960400191505060405180910390fd5b505050565b612e9f81600d613b0d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b612ef981600d613be890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b612f59828260405180602001604052806000815250612e1a565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612fe4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806142e46022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613046848484612dc7565b613052848484846137d1565b6130a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806140596032913960400191505060405180910390fd5b50505050565b8273ffffffffffffffffffffffffffffffffffffffff166130cd826119c4565b73ffffffffffffffffffffffffffffffffffffffff1614613139576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806143066029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156131bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806140c56024913960400191505060405180910390fd5b6131c881613ca5565b61320f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d63565b613256600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d86565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133606001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d9c90919063ffffffff16565b905060006006600084815260200190815260200160002054905081811461344d576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106133cd57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061342557fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361349f9190613faa565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613610576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61361981612c59565b1561368c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613725600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d86565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006137f28473ffffffffffffffffffffffffffffffffffffffff16613de6565b6137ff5760019050613b05565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b613843612ccb565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156138f35780820151818401526020810190506138d8565b50505050905090810190601f1680156139205780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106139b85780518252602082019150602081019050602083039250613995565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613a1a576040519150601f19603f3d011682016040523d82523d6000602084013e613a1f565b606091505b509150915081613a8d57600081511115613a3c5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806140596032913960400191505060405180910390fd5b6000818060200190516020811015613aa457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b613b178282612f5d565b15613b8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613bf28282612f5d565b613c47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061420c6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613d605760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613d7b60018260000154613d9c90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613dde83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613e31565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613e2857506000801b8214155b92505050919050565b6000838311158290613ede576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ea3578082015181840152602081019050613e88565b50505050905090810190601f168015613ed05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f6b57805160ff1916838001178555613f99565b82800160010185558215613f99579182015b82811115613f98578251825591602001919060010190613f7d565b5b509050613fa69190613fd6565b5090565b815481835581811115613fd157818360005260206000209182019101613fd09190613fd6565b5b505050565b613ff891905b80821115613ff4576000816000905550600101613fdc565b5090565b9056fe5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e204f776e6572205265717569726564455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465725b4552524f525d20412070617373706f72742077697468207468697320555549442068617320616c7265616479206265656e20637265617465644552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e2049737375696e6720436f756e7472792052657175697265644552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c655b4552524f525d205468652070617373706f7274207769746820746869732055554944206d757374206265206163746976655b494e56414c4944205045524d495353494f4e5d20566572696669656420436f756e7472792052657175697265645b4552524f525d204e6f207375636820636f756e74727920686173206265656e20726567697374657265644552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64735b494e56414c4944205045524d495353494f4e5d204f776e65722052657175697265645b4552524f525d204e6f20737563682070617373706f727420686173206265656e2063726561746564a265627a7a72315820cd066efb8d687b79cb86cc54179112e43fa9e67e4d3ffdf8bd28ca6f340e4e5564736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "sourceMap": "222:4885:2:-;;;309:90;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:90:2;456:155:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:4;539:6;718:40:7;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::10;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;1357:51:11;1172:10;1376:31;;1357:18;;;:51;;:::i;:::-;920:4:13;912:5;:12;;;;;;;;;;;;:::i;:::-;;944:6;934:7;:16;;;;;;;;;;;;:::i;:::-;;1038:49;774:10;1057:29;;1038:18;;;:49;;:::i;:::-;840:254;;456:155:12;;318:24:5;329:12;:10;;;:12;;:::i;:::-;318:10;;;:24;;:::i;:::-;381:10:2;372:6;;:19;;;;;;;;;;;;;;;;;;222:4885;;1442:190:7;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;788:96:3:-;833:15;867:10;860:17;;788:96;:::o;786:119:5:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;260:175:4:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;222:4885:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "222:4885:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;222:4885:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1199:83:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1199:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:200:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4283:200:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3583:415:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2171:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5929:287:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5929:287:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1789:229:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1789:229:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1892:609:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1892:609:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1892:609:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1892:609:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1892:609:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1892:609:2;;;;;;;;;;;;;;;:::i;:::-;;443:132:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;443:132:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6865::10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6865:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2603:196:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2603:196:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2939:223:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2939:223:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3387:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3387:89:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2513:207:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2513:207:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1284:167:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1284:167:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1284:167:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1284:167:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1284:167:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1284:167:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3872:114:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3872:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1391:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:90:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;607:90:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;703:77;;;:::i;:::-;;823:140:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;823:140:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4776:249:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4776:249:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;494:107:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;494:107:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2509:346:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2509:346:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2509:346:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2509:346:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2509:346:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2509:346:2;;;;;;;;;;;;;;;:::i;:::-;;7720:269:10;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7720:269:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7720:269:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7720:269:10;;;;;;;;;;;;;;;:::i;:::-;;2863:359:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2863:359:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2863:359:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2863:359:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2863:359:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2863:359:2;;;;;;;;;;;;;;;:::i;:::-;;1781:545:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1781:545:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1781:545:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:345:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3519:345:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3519:345:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3230:146;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3230:146:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3230:146:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3230:146:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3230:146:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3230:146:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1513:371;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1513:371:2;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1513:371:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1513:371:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1513:371:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1513:371:2;;;;;;;;;;;;;;;:::i;:::-;;5347:145:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5347:145:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:133:7;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1199:83:13:-;1238:13;1270:5;1263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:83;:::o;4283:200:10:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;2171:94:11:-;2215:7;2241:10;:17;;;;2234:24;;2171:94;:::o;5929:287:10:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:11:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:12;:19;1998:5;1985:19;;;;;;;;;;;;;;;2005:5;1985:26;;;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;1892:609:2:-;4219:11;:23;4231:10;4219:23;;;;;;;;;;;;;;;:41;;;;;;;;;;;;4197:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:1;1998:19;2018:4;1998:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1998:25:2;;;;;;;;;;;;;;;;;;;;;;:30;;1976:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:33;;:::i;:::-;2195:4;2171:12;:21;;:28;;;;;;;;;;;2244:1;2210:12;:31;;:35;;;;;2286:10;2256:12;:27;;:40;;;;;;;;;;;2309:19;2331:17;2354:12;2331:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2331:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:58;;2406:11;2378:19;2398:4;2378:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2378:25:2;;;;;;;;;;;;;;;;;;;;;:39;;;;2428:30;2434:10;2446:11;2428:5;:30::i;:::-;4345:1;;1892:609;:::o;443:132:14:-;513:4;395:22:5;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:18:14;535:2;539:7;529:5;:18::i;:::-;564:4;557:11;;443:132;;;;:::o;6865::10:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;2603:196:11:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;2939:223:10:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;3387:89:13:-;3429:13;3461:8;3454:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3387:89;:::o;2513:207:10:-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;1284:167:14:-;1378:4;395:22:5;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:29:14;1404:2;1408:7;1417:5;1394:9;:29::i;:::-;1440:4;1433:11;;1284:167;;;;;:::o;3872:114:2:-;3908:13;3934:16;:24;;;;;;;;;;;;;;;;;;;3976:2;3969:9;;;3872:114;:::o;1391:87:13:-;1432:13;1464:7;1457:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:87;:::o;607:90:5:-;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;823:140:14:-;897:4;395:22:5;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:22:14;923:2;927:7;913:9;:22::i;:::-;952:4;945:11;;823:140;;;;:::o;4776:249:10:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;;;;;;;;4776:249;;:::o;494:107:5:-;550:4;573:21;586:7;573:8;:12;;:21;;;;:::i;:::-;566:28;;494:107;;;:::o;2509:346:2:-;2620:1;2591:19;2611:4;2591:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2591:25:2;;;;;;;;;;;;;;;;;;;;;;:30;;2569:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2701:35;;:::i;:::-;2739:17;2757:19;2777:4;2757:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2757:25:2;;;;;;;;;;;;;;;;;;;;;;2739:44;;;;;;;;;;;;;;;;;;2701:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2509:346;;:::o;7720:269:10:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;2863:359:2:-;2951:4;4751:10;4671:90;;:17;4689:19;4709:4;4689:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4689:25:2;;;;;;;;;;;;;;;;;;;;;;4671:44;;;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;:90;;;4649:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:4;2995:65;;:17;3041:1;3013:19;3033:4;3013:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3013:25:2;;;;;;;;;;;;;;;;;;;;;;:29;2995:48;;;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;:65;;;2973:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3209:5;3149:17;3195:1;3167:19;3187:4;3167:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3167:25:2;;;;;;;;;;;;;;;;;;;;;;:29;3149:48;;;;;;;;;;;;;;;;;;:57;;;:65;;;;;;;;;;;;;;;;;;2863:359;;:::o;1781:545:13:-;1839:13;1872:16;1880:7;1872;:16::i;:::-;1864:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:23;1977:10;:19;1988:7;1977:19;;;;;;;;;;;1951:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:1;2110:9;2104:23;:28;2100:220;;;2148:9;;;;;;;;;;;;;;;;;2100:220;2288:8;2298:9;2271:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2271:37:13;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2271:37:13;;;2257:52;;;1781:545;;;;:::o;3519:345:2:-;3622:13;3724:4;3675:53;;:11;:27;3687:14;3675:27;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:53;;;3653:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3817:11;:27;3829:14;3817:27;;;;;;;;;;;;;;;:39;;3810:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:345;;;:::o;3230:146::-;3368:4;4994:10;4956:48;;:34;4964:19;4984:4;4964:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4964:25:2;;;;;;;;;;;;;;;;;;;;;;4956:7;:34::i;:::-;:48;;;4934:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3230:146;;;;:::o;1513:371::-;4081:6;;;;;;;;;;;4067:20;;:10;:20;;;4059:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:26;;;;;;;;1774:4;1766:26;;;;;;1780:11;1766:26;;;1743:11;:20;1755:7;1743:20;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1803:18;1813:7;1803:9;:18::i;:::-;1837:39;1864:11;1837:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:371;;:::o;5347:145:10:-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;9158:152::-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:3:-;833:15;867:10;860:17;;788:96;:::o;9671:329:10:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;3174:239:11:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;:::-;3174:239;;;:::o;3670:196::-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;:::-;3670:196;;:::o;1065:112:6:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11230:239:10:-;11317:18;11323:2;11327:7;11317:5;:18::i;:::-;11353:54;11384:1;11388:2;11392:7;11401:5;11353:22;:54::i;:::-;11345:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11230:239;;;:::o;786:119:5:-;842:21;855:7;842:8;:12;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;911:127::-;970:24;986:7;970:8;:15;;:24;;;;:::i;:::-;1023:7;1009:22;;;;;;;;;;;;911:127;:::o;10529:100:10:-;10596:26;10606:2;10610:7;10596:26;;;;;;;;;;;;:9;:26::i;:::-;10529:100;;:::o;779:200:4:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8694:269:10:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;13281:447::-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;6284:1128:11:-;6546:22;6571:32;6601:1;6571:12;:18;6584:4;6571:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6546:57;;6613:18;6634:17;:26;6652:7;6634:26;;;;;;;;;;;;6613:47;;6778:14;6764:10;:28;6760:323;;6808:19;6830:12;:18;6843:4;6830:18;;;;;;;;;;;;;;;6849:14;6830:34;;;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;6879:18;;;;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;:44;;;;7028:10;6995:17;:30;7013:11;6995:30;;;;;;;;;;;:43;;;;6760:323;;7169:12;:18;7182:4;7169:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;5241:12;:16;5254:2;5241:16;;;;;;;;;;;;;;;:23;;;;5212:17;:26;5230:7;5212:26;;;;;;;;;;;:52;;;;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;5296:7;5274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5274:30:11;;;;;;;;;;;;;;;;;;;;;;5128:183;;:::o;11714:327:10:-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;5506:161:11:-;5609:10;:17;;;;5582:15;:24;5598:7;5582:24;;;;;;;;;;;:44;;;;5636:10;5652:7;5636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5636:24:11;;;;;;;;;;;;;;;;;;;;;;5506:161;:::o;14367:1051:10:-;14488:4;14513:15;:2;:13;;;:15::i;:::-;14508:58;;14551:4;14544:11;;;;14508:58;14635:12;14649:23;14676:2;:7;;14736:2;14720:36;;;:45;;;;14779:12;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14684:175:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14684:175:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;14684:175:10;14676:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14676:184:10;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:10;;;;14875:7;14870:542;;14922:1;14902:10;:17;:21;14898:376;;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15320:32:10;;;;;;;;;;;;;;;;15304:48;;754:10;15384:16;;15374:26;;;:6;:26;;;;15366:35;;;;;14367:1051;;;;;;;:::o;260:175:4:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;15580:171:10:-;15679:1;15643:38;;:15;:24;15659:7;15643:24;;;;;;;;;;;;;;;;;;;;;:38;;;15639:106;;15732:1;15697:15;:24;15713:7;15697:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15639:106;15580:171;:::o;1367:108:6:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:9:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;686:610:19:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1732:187:9:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;222:4885:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol\";\r\nimport \"@openzeppelin/contracts/access/roles/MinterRole.sol\";\r\n\r\ncontract Passport is ERC721Full, ERC721Mintable {\r\n    address internal _owner;\r\n\r\n    constructor() public ERC721Full(\"Passport\", \"PASS\") {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    struct Country {\r\n        bool isVerifiedCountry;\r\n        string countryCode;\r\n    }\r\n\r\n    enum Action {Enter, Exit}\r\n\r\n    struct TravelAction {\r\n        address destination;\r\n        Action action;\r\n        uint256 datetime;\r\n    }\r\n\r\n    struct PassportToken {\r\n        bool isActive;\r\n        mapping(uint256 => TravelAction[]) travelRecord;\r\n        uint256 travelRecordLength;\r\n        address issuingCountry;\r\n    }\r\n\r\n    mapping(address => Country) internal countryList;\r\n\r\n    //Eg; SG123 to index 1 of passportTokenList\r\n    mapping(string => uint256) internal passportUUIDMapping;\r\n\r\n    PassportToken[] internal passportTokenList;\r\n\r\n    event countryRegistrationSuccess(string countryCode);\r\n    event passportCreationSuccess(string UUID);\r\n    // event retrievePassport(TravelAction[] travelRecords);\r\n    /** Add new country - to list + as minter\r\n *  Create passport\r\n *  All passports are owned by the country right? Yup\r\n *  Indiv user is just read only?\r\n *  They will read only through the UI that we provide right? Yup the country that they are in will own the passport\r\n */\r\n\r\n    function registerCountry(address country, string memory countryCode)\r\n        public\r\n        onlyOwner() // Need to change to admin, so there's list of admin instead of just owner. Refer to WhitelistAdminRole.sol\r\n    {\r\n        countryList[country] = Country(true, countryCode);\r\n        addMinter(country);\r\n        emit countryRegistrationSuccess(countryCode);\r\n    }\r\n\r\n    function createPassport(string memory UUID) public onlyVerifiedCountry() {\r\n        require(\r\n            passportUUIDMapping[UUID] != 0,\r\n            \"[ERROR] A passport with this UUID has already been created\"\r\n        );\r\n\r\n        PassportToken memory _newPassport;\r\n        _newPassport.isActive = true;\r\n        _newPassport.travelRecordLength = 0;\r\n        _newPassport.issuingCountry = msg.sender;\r\n\r\n        uint256 _passportId = passportTokenList.push(_newPassport);\r\n        passportUUIDMapping[UUID] = _passportId;\r\n        _mint(msg.sender, _passportId);\r\n        // consider emitting here\r\n    }\r\n\r\n    function viewPassport(string memory UUID) public {\r\n        require(\r\n            passportUUIDMapping[UUID] != 0,\r\n            \"[ERROR] No such passport has been created\"\r\n        );\r\n        PassportToken memory passportToView = passportTokenList[passportUUIDMapping[UUID]];\r\n        // emit retrievePassport(passportToView.travelRecord);\r\n    }\r\n\r\n    function freezePassport(string memory UUID)\r\n        public\r\n        onlyIssuingCountry(UUID)\r\n    {\r\n        require(\r\n            passportTokenList[passportUUIDMapping[UUID] - 1].isActive == true,\r\n            \"[ERROR] The passport with this UUID must be active\"\r\n        );\r\n        passportTokenList[passportUUIDMapping[UUID] - 1].isActive = false;\r\n    }\r\n\r\n    function addTravelHistory(\r\n        string memory UUID,\r\n        Action action,\r\n        uint256 timestamp\r\n    ) public onlyOwnerCountry(UUID) {}\r\n\r\n    // function viewTravelHistory(string memory UUID) public view onlyOwnerCountry(UUID) returns(TravelAction[] memory) {\r\n\r\n    // }\r\n    function viewRegisteredCountry(address countryAddress)\r\n        public\r\n        view\r\n        returns (string memory)\r\n    {\r\n        require(\r\n            countryList[countryAddress].isVerifiedCountry == true,\r\n            \"[ERROR] No such country has been registered\"\r\n        );\r\n        return countryList[countryAddress].countryCode;\r\n    }\r\n\r\n    function abc() public view returns (string memory) {\r\n        string memory hi = \"abc\";\r\n        return hi;\r\n    }\r\n\r\n    //access modifier functions\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"[INVALID PERMISSION] Owner Required\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyVerifiedCountry() {\r\n        require(\r\n            countryList[msg.sender].isVerifiedCountry,\r\n            \"[INVALID PERMISSION] Verified Country Required\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyApproved(string memory UUID) {\r\n        require(\r\n            getApproved(passportUUIDMapping[UUID]) == msg.sender,\r\n            \"[INVALID PERMISSION] Approved Sender Required\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyIssuingCountry(string memory UUID) {\r\n        require(\r\n            passportTokenList[passportUUIDMapping[UUID]].issuingCountry ==\r\n                msg.sender,\r\n            \"[INVALID PERMISSION] Passport Token Issuing Country Required\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwnerCountry(string memory UUID) {\r\n        require(\r\n            ownerOf(passportUUIDMapping[UUID]) == msg.sender,\r\n            \"[INVALID PERMISSION] Passport Token Owner Required\"\r\n        );\r\n        _;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\Lim Shan Jing\\Desktop\\IS4302\\cryptyPassta\\src\\blockchain\\contracts\\Passport.sol",
  "ast": {
    "absolutePath": "/C/Users/Lim Shan Jing/Desktop/IS4302/cryptyPassta/src/blockchain/contracts/Passport.sol",
    "exportedSymbols": {
      "Passport": [
        641
      ]
    },
    "id": 642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 302,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 303,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 2190,
        "src": "27:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 2432,
        "src": "90:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "file": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 857,
        "src": "157:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2189,
              "src": "243:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2189",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2431,
              "src": "255:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$2431",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "255:14:2"
          }
        ],
        "contractDependencies": [
          668,
          856,
          957,
          967,
          1825,
          2165,
          2189,
          2362,
          2431,
          2534,
          2561,
          2584
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 641,
        "linearizedBaseContracts": [
          641,
          2431,
          856,
          2189,
          2362,
          2584,
          2165,
          2561,
          1825,
          2534,
          957,
          967,
          668
        ],
        "name": "Passport",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "277:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 310,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "361:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 318,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "372:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "381:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "381:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "372:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 324,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50617373706f7274",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "341:10:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cce641dfcd89fb77f662a0e440b093f8af6f1e4f51b300409fa74d5535cb2ef1",
                      "typeString": "literal_string \"Passport\""
                    },
                    "value": "Passport"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "50415353",
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "353:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8e6ec7cc8637dc1fd49b2500b930e6a646847644be08844403a4be022386f2d1",
                      "typeString": "literal_string \"PASS\""
                    },
                    "value": "PASS"
                  }
                ],
                "id": 316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 313,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2189,
                  "src": "330:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2189_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "330:30:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:2"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:2"
            },
            "scope": 641,
            "src": "309:90:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.Country",
            "id": 329,
            "members": [
              {
                "constant": false,
                "id": 326,
                "name": "isVerifiedCountry",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "433:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 325,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "433:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 328,
                "name": "countryCode",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "466:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 327,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Country",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "407:85:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.Action",
            "id": 332,
            "members": [
              {
                "id": 330,
                "name": "Enter",
                "nodeType": "EnumValue",
                "src": "513:5:2"
              },
              {
                "id": 331,
                "name": "Exit",
                "nodeType": "EnumValue",
                "src": "520:4:2"
              }
            ],
            "name": "Action",
            "nodeType": "EnumDefinition",
            "src": "500:25:2"
          },
          {
            "canonicalName": "Passport.TravelAction",
            "id": 339,
            "members": [
              {
                "constant": false,
                "id": 334,
                "name": "destination",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "564:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 333,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "564:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 336,
                "name": "action",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "594:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Action_$332",
                  "typeString": "enum Passport.Action"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 335,
                  "name": "Action",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 332,
                  "src": "594:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$332",
                    "typeString": "enum Passport.Action"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 338,
                "name": "datetime",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "618:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 337,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "618:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TravelAction",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "533:109:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.PassportToken",
            "id": 351,
            "members": [
              {
                "constant": false,
                "id": 341,
                "name": "isActive",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "682:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 340,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "682:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 346,
                "name": "travelRecord",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "706:47:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Passport.TravelAction[])"
                },
                "typeName": {
                  "id": 345,
                  "keyType": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "706:34:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_$",
                    "typeString": "mapping(uint256 => struct Passport.TravelAction[])"
                  },
                  "valueType": {
                    "baseType": {
                      "contractScope": null,
                      "id": 343,
                      "name": "TravelAction",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 339,
                      "src": "725:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TravelAction_$339_storage_ptr",
                        "typeString": "struct Passport.TravelAction"
                      }
                    },
                    "id": 344,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "725:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_ptr",
                      "typeString": "struct Passport.TravelAction[]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 348,
                "name": "travelRecordLength",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "764:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 347,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 350,
                "name": "issuingCountry",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "801:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 349,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PassportToken",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "650:181:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 355,
            "name": "countryList",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "839:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
              "typeString": "mapping(address => struct Passport.Country)"
            },
            "typeName": {
              "id": 354,
              "keyType": {
                "id": 352,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "847:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "839:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                "typeString": "mapping(address => struct Passport.Country)"
              },
              "valueType": {
                "contractScope": null,
                "id": 353,
                "name": "Country",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 329,
                "src": "858:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Country_$329_storage_ptr",
                  "typeString": "struct Passport.Country"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 359,
            "name": "passportUUIDMapping",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "945:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 356,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "953:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "945:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 357,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "963:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 362,
            "name": "passportTokenList",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "1009:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
              "typeString": "struct Passport.PassportToken[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 360,
                "name": "PassportToken",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 351,
                "src": "1009:13:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                  "typeString": "struct Passport.PassportToken"
                }
              },
              "id": 361,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1009:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage_ptr",
                "typeString": "struct Passport.PassportToken[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 366,
            "name": "countryRegistrationSuccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "indexed": false,
                  "name": "countryCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1093:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:20:2"
            },
            "src": "1060:53:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 370,
            "name": "passportCreationSuccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "1149:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1148:13:2"
            },
            "src": "1119:43:2"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "1732:152:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "countryList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "1743:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                          "typeString": "mapping(address => struct Passport.Country storage ref)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "1755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1743:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_storage",
                        "typeString": "struct Passport.Country storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1774:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "id": 384,
                          "name": "countryCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "1780:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 382,
                        "name": "Country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1766:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Country_$329_storage_ptr_$",
                          "typeString": "type(struct Passport.Country storage pointer)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1766:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_memory",
                        "typeString": "struct Passport.Country memory"
                      }
                    },
                    "src": "1743:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Country_$329_storage",
                      "typeString": "struct Passport.Country storage ref"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "1813:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 388,
                      "name": "addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "1803:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "countryCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1864:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 392,
                      "name": "countryRegistrationSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1837:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "EmitStatement",
                  "src": "1832:44:2"
                }
              ]
            },
            "documentation": "Add new country - to list + as minter\n Create passport\n All passports are owned by the country right? Yup\n Indiv user is just read only?\n They will read only through the UI that we provide right? Yup the country that they are in will own the passport",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 376,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 572,
                  "src": "1607:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:11:2"
              }
            ],
            "name": "registerCountry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1538:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "name": "countryCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1555:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1537:44:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:2"
            },
            "scope": 641,
            "src": "1513:371:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "1965:536:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 405,
                            "name": "passportUUIDMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1998:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 406,
                            "name": "UUID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "2018:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1998:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2027:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1998:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d20412070617373706f72742077697468207468697320555549442068617320616c7265616479206265656e2063726561746564",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:60:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_338f9ae7794041901d4d64df04eae6c077105e2c0e89ab54908b7481d4d21af8",
                          "typeString": "literal_string \"[ERROR] A passport with this UUID has already been created\""
                        },
                        "value": "[ERROR] A passport with this UUID has already been created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_338f9ae7794041901d4d64df04eae6c077105e2c0e89ab54908b7481d4d21af8",
                          "typeString": "literal_string \"[ERROR] A passport with this UUID has already been created\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "1976:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:138:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:138:2"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "name": "_newPassport",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "2127:33:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                        "typeString": "struct Passport.PassportToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 413,
                        "name": "PassportToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2127:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                          "typeString": "struct Passport.PassportToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2127:33:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2171:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 341,
                      "src": "2171:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2195:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2171:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2210:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "travelRecordLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 348,
                      "src": "2210:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2244:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2210:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2256:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issuingCountry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 350,
                      "src": "2256:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "2286:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2286:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2256:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:40:2"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "name": "_passportId",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "2309:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2354:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "passportTokenList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2331:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                          "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2331:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PassportToken_$351_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Passport.PassportToken storage ref) returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "passportUUIDMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "2378:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 444,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "UUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "2398:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2378:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "_passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "2406:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2378:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2690,
                          "src": "2434:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2434:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 451,
                        "name": "_passportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "2446:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 448,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1972
                      ],
                      "referencedDeclaration": 1972,
                      "src": "2428:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 402,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 401,
                  "name": "onlyVerifiedCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "1943:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:21:2"
              }
            ],
            "name": "createPassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "1916:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1915:20:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:0:2"
            },
            "scope": 641,
            "src": "1892:609:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "2558:297:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "passportUUIDMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "2591:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 463,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "UUID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "2611:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2591:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2620:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2591:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d204e6f20737563682070617373706f727420686173206265656e2063726561746564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2636:43:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9fcf43eeec135c0beb140e05c411f617728bd3f17db531a79c61a99c03c489",
                          "typeString": "literal_string \"[ERROR] No such passport has been created\""
                        },
                        "value": "[ERROR] No such passport has been created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9fcf43eeec135c0beb140e05c411f617728bd3f17db531a79c61a99c03c489",
                          "typeString": "literal_string \"[ERROR] No such passport has been created\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "2569:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:121:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:121:2"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "name": "passportToView",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "2701:35:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                        "typeString": "struct Passport.PassportToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 469,
                        "name": "PassportToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2701:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                          "typeString": "struct Passport.PassportToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 471,
                      "name": "passportTokenList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "2739:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                        "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                      }
                    },
                    "id": 475,
                    "indexExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 472,
                        "name": "passportUUIDMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "2757:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "UUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2777:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2757:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2739:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                      "typeString": "struct Passport.PassportToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2701:82:2"
                }
              ]
            },
            "documentation": null,
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewPassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "2531:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2530:20:2"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2558:0:2"
            },
            "scope": 641,
            "src": "2509:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "2962:260:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 487,
                              "name": "passportTokenList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "2995:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                                "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 488,
                                  "name": "passportUUIDMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "3013:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                    "typeString": "mapping(string memory => uint256)"
                                  }
                                },
                                "id": 490,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 489,
                                  "name": "UUID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "3033:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3013:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3041:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3013:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2995:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                              "typeString": "struct Passport.PassportToken storage ref"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 341,
                          "src": "2995:57:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3056:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2995:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d205468652070617373706f7274207769746820746869732055554944206d75737420626520616374697665",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3075:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e26dbc7514bf7988a11f1ecc9692a815a94b9f9ead790863cb7ea676807c5a6",
                          "typeString": "literal_string \"[ERROR] The passport with this UUID must be active\""
                        },
                        "value": "[ERROR] The passport with this UUID must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e26dbc7514bf7988a11f1ecc9692a815a94b9f9ead790863cb7ea676807c5a6",
                          "typeString": "literal_string \"[ERROR] The passport with this UUID must be active\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "2973:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:165:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:165:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 500,
                          "name": "passportTokenList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "3149:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                            "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                          }
                        },
                        "id": 506,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 501,
                              "name": "passportUUIDMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3167:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 503,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 502,
                              "name": "UUID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3187:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3167:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3195:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3167:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3149:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                          "typeString": "struct Passport.PassportToken storage ref"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 341,
                      "src": "3149:57:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3209:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3149:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:65:2"
                }
              ]
            },
            "documentation": null,
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 483,
                    "name": "UUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 480,
                    "src": "2951:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 482,
                  "name": "onlyIssuingCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 622,
                  "src": "2932:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2932:24:2"
              }
            ],
            "name": "freezePassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "2887:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2886:20:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:0:2"
            },
            "scope": 641,
            "src": "2863:359:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "3374:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 521,
                    "name": "UUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "3368:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyOwnerCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 640,
                  "src": "3351:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3351:22:2"
              }
            ],
            "name": "addTravelHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3266:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3295:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$332",
                    "typeString": "enum Passport.Action"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 515,
                    "name": "Action",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 332,
                    "src": "3295:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$332",
                      "typeString": "enum Passport.Action"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3319:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:88:2"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3374:0:2"
            },
            "scope": 641,
            "src": "3230:146:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "3642:222:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 533,
                              "name": "countryList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "3675:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                                "typeString": "mapping(address => struct Passport.Country storage ref)"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 534,
                              "name": "countryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "3687:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3675:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$329_storage",
                              "typeString": "struct Passport.Country storage ref"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerifiedCountry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 326,
                          "src": "3675:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3724:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3675:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d204e6f207375636820636f756e74727920686173206265656e2072656769737465726564",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3743:45:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92528aef8317071c4220ea30f02f13e4cfb0c273c7893d0432a6c97cfc9419b2",
                          "typeString": "literal_string \"[ERROR] No such country has been registered\""
                        },
                        "value": "[ERROR] No such country has been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92528aef8317071c4220ea30f02f13e4cfb0c273c7893d0432a6c97cfc9419b2",
                          "typeString": "literal_string \"[ERROR] No such country has been registered\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "3653:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:146:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:146:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "countryList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3817:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                          "typeString": "mapping(address => struct Passport.Country storage ref)"
                        }
                      },
                      "id": 544,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 543,
                        "name": "countryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "3829:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3817:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_storage",
                        "typeString": "struct Passport.Country storage ref"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "countryCode",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 328,
                    "src": "3817:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 531,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "3810:46:2"
                }
              ]
            },
            "documentation": null,
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewRegisteredCountry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "countryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "3550:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3550:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3549:24:2"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "3622:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:15:2"
            },
            "scope": 641,
            "src": "3519:345:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "3923:63:2",
              "statements": [
                {
                  "assignments": [
                    554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 554,
                      "name": "hi",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "3934:16:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 553,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3934:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "616263",
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3953:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c45",
                      "typeString": "literal_string \"abc\""
                    },
                    "value": "abc"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3934:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 557,
                    "name": "hi",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 554,
                    "src": "3976:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 552,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "3969:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3884:2:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "3908:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3907:15:2"
            },
            "scope": 641,
            "src": "3872:114:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "4048:99:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4067:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4067:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4081:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4067:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d204f776e6572205265717569726564",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4089:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de40039762e96dc70ca3a07e47a867130427998867203e2b7f14735c505c3a4b",
                          "typeString": "literal_string \"[INVALID PERMISSION] Owner Required\""
                        },
                        "value": "[INVALID PERMISSION] Owner Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de40039762e96dc70ca3a07e47a867130427998867203e2b7f14735c505c3a4b",
                          "typeString": "literal_string \"[INVALID PERMISSION] Owner Required\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4059:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:68:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:68:2"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4138:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 572,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4045:2:2"
            },
            "src": "4027:120:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "4186:168:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "countryList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "4219:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                              "typeString": "mapping(address => struct Passport.Country storage ref)"
                            }
                          },
                          "id": 578,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 576,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "4231:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4231:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4219:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$329_storage",
                            "typeString": "struct Passport.Country storage ref"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isVerifiedCountry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 326,
                        "src": "4219:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d20566572696669656420436f756e747279205265717569726564",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4275:48:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8648fe4ee728e551e6daa546fe5adf666ad6969d21a3dd4ae8caf6493bc3a75c",
                          "typeString": "literal_string \"[INVALID PERMISSION] Verified Country Required\""
                        },
                        "value": "[INVALID PERMISSION] Verified Country Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8648fe4ee728e551e6daa546fe5adf666ad6969d21a3dd4ae8caf6493bc3a75c",
                          "typeString": "literal_string \"[INVALID PERMISSION] Verified Country Required\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4197:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:137:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "4197:137:2"
                },
                {
                  "id": 583,
                  "nodeType": "PlaceholderStatement",
                  "src": "4345:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 585,
            "name": "onlyVerifiedCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4183:2:2"
            },
            "src": "4155:199:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "4404:178:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 591,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4449:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 593,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 592,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "4469:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4449:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 590,
                            "name": "getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1324
                            ],
                            "referencedDeclaration": 1324,
                            "src": "4437:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4437:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4479:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4479:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4437:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d20417070726f7665642053656e646572205265717569726564",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:47:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29482816b56b4909006f95bcc354bcb66f88a91bfc21a15ac9c9a73eb6439a37",
                          "typeString": "literal_string \"[INVALID PERMISSION] Approved Sender Required\""
                        },
                        "value": "[INVALID PERMISSION] Approved Sender Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29482816b56b4909006f95bcc354bcb66f88a91bfc21a15ac9c9a73eb6439a37",
                          "typeString": "literal_string \"[INVALID PERMISSION] Approved Sender Required\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4415:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4415:147:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:147:2"
                },
                {
                  "id": 601,
                  "nodeType": "PlaceholderStatement",
                  "src": "4573:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 603,
            "name": "onlyApproved",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "4384:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4383:20:2"
            },
            "src": "4362:220:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "4638:231:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 608,
                              "name": "passportTokenList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "4671:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                                "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 609,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4689:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 611,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 610,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 605,
                                "src": "4709:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4689:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4671:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                              "typeString": "struct Passport.PassportToken storage ref"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuingCountry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 350,
                          "src": "4671:59:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4751:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4751:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4671:90:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e2049737375696e6720436f756e747279205265717569726564",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4776:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6550c3ffb695a43fccf5f47527e5dad1b5468fe822c3a4637828b9a80bfb8f07",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Issuing Country Required\""
                        },
                        "value": "[INVALID PERMISSION] Passport Token Issuing Country Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6550c3ffb695a43fccf5f47527e5dad1b5468fe822c3a4637828b9a80bfb8f07",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Issuing Country Required\""
                        }
                      ],
                      "id": 607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:200:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:200:2"
                },
                {
                  "id": 620,
                  "nodeType": "PlaceholderStatement",
                  "src": "4860:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 622,
            "name": "onlyIssuingCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "4618:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4618:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4617:20:2"
            },
            "src": "4590:279:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "4923:179:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 628,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4964:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 630,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4984:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4964:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 627,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1258
                            ],
                            "referencedDeclaration": 1258,
                            "src": "4956:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4956:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4994:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4994:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4956:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e204f776e6572205265717569726564",
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5019:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c2fcad71130f43ea61017a56d5491d19f0578446f32f1540cc1d3bde8e43a52",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Owner Required\""
                        },
                        "value": "[INVALID PERMISSION] Passport Token Owner Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c2fcad71130f43ea61017a56d5491d19f0578446f32f1540cc1d3bde8e43a52",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Owner Required\""
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4934:148:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "4934:148:2"
                },
                {
                  "id": 638,
                  "nodeType": "PlaceholderStatement",
                  "src": "5093:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "name": "onlyOwnerCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "4903:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4903:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4902:20:2"
            },
            "src": "4877:225:2",
            "visibility": "internal"
          }
        ],
        "scope": 642,
        "src": "222:4885:2"
      }
    ],
    "src": "0:5109:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Lim Shan Jing/Desktop/IS4302/cryptyPassta/src/blockchain/contracts/Passport.sol",
    "exportedSymbols": {
      "Passport": [
        641
      ]
    },
    "id": 642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 302,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 303,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 2190,
        "src": "27:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 2432,
        "src": "90:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "file": "@openzeppelin/contracts/access/roles/MinterRole.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 857,
        "src": "157:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2189,
              "src": "243:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2189",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2431,
              "src": "255:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$2431",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "255:14:2"
          }
        ],
        "contractDependencies": [
          668,
          856,
          957,
          967,
          1825,
          2165,
          2189,
          2362,
          2431,
          2534,
          2561,
          2584
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 641,
        "linearizedBaseContracts": [
          641,
          2431,
          856,
          2189,
          2362,
          2584,
          2165,
          2561,
          1825,
          2534,
          957,
          967,
          668
        ],
        "name": "Passport",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "277:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 310,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "361:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 318,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "372:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "381:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "381:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "372:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "372:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 324,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50617373706f7274",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "341:10:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cce641dfcd89fb77f662a0e440b093f8af6f1e4f51b300409fa74d5535cb2ef1",
                      "typeString": "literal_string \"Passport\""
                    },
                    "value": "Passport"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "50415353",
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "353:6:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8e6ec7cc8637dc1fd49b2500b930e6a646847644be08844403a4be022386f2d1",
                      "typeString": "literal_string \"PASS\""
                    },
                    "value": "PASS"
                  }
                ],
                "id": 316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 313,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2189,
                  "src": "330:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2189_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "330:30:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:2"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:2"
            },
            "scope": 641,
            "src": "309:90:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.Country",
            "id": 329,
            "members": [
              {
                "constant": false,
                "id": 326,
                "name": "isVerifiedCountry",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "433:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 325,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "433:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 328,
                "name": "countryCode",
                "nodeType": "VariableDeclaration",
                "scope": 329,
                "src": "466:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 327,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Country",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "407:85:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.Action",
            "id": 332,
            "members": [
              {
                "id": 330,
                "name": "Enter",
                "nodeType": "EnumValue",
                "src": "513:5:2"
              },
              {
                "id": 331,
                "name": "Exit",
                "nodeType": "EnumValue",
                "src": "520:4:2"
              }
            ],
            "name": "Action",
            "nodeType": "EnumDefinition",
            "src": "500:25:2"
          },
          {
            "canonicalName": "Passport.TravelAction",
            "id": 339,
            "members": [
              {
                "constant": false,
                "id": 334,
                "name": "destination",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "564:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 333,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "564:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 336,
                "name": "action",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "594:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Action_$332",
                  "typeString": "enum Passport.Action"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 335,
                  "name": "Action",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 332,
                  "src": "594:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$332",
                    "typeString": "enum Passport.Action"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 338,
                "name": "datetime",
                "nodeType": "VariableDeclaration",
                "scope": 339,
                "src": "618:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 337,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "618:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TravelAction",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "533:109:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Passport.PassportToken",
            "id": 351,
            "members": [
              {
                "constant": false,
                "id": 341,
                "name": "isActive",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "682:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 340,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "682:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 346,
                "name": "travelRecord",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "706:47:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Passport.TravelAction[])"
                },
                "typeName": {
                  "id": 345,
                  "keyType": {
                    "id": 342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "706:34:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_$",
                    "typeString": "mapping(uint256 => struct Passport.TravelAction[])"
                  },
                  "valueType": {
                    "baseType": {
                      "contractScope": null,
                      "id": 343,
                      "name": "TravelAction",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 339,
                      "src": "725:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TravelAction_$339_storage_ptr",
                        "typeString": "struct Passport.TravelAction"
                      }
                    },
                    "id": 344,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "725:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TravelAction_$339_storage_$dyn_storage_ptr",
                      "typeString": "struct Passport.TravelAction[]"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 348,
                "name": "travelRecordLength",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "764:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 347,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 350,
                "name": "issuingCountry",
                "nodeType": "VariableDeclaration",
                "scope": 351,
                "src": "801:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 349,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PassportToken",
            "nodeType": "StructDefinition",
            "scope": 641,
            "src": "650:181:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 355,
            "name": "countryList",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "839:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
              "typeString": "mapping(address => struct Passport.Country)"
            },
            "typeName": {
              "id": 354,
              "keyType": {
                "id": 352,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "847:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "839:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                "typeString": "mapping(address => struct Passport.Country)"
              },
              "valueType": {
                "contractScope": null,
                "id": 353,
                "name": "Country",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 329,
                "src": "858:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Country_$329_storage_ptr",
                  "typeString": "struct Passport.Country"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 359,
            "name": "passportUUIDMapping",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "945:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 356,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "953:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "945:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 357,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "963:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 362,
            "name": "passportTokenList",
            "nodeType": "VariableDeclaration",
            "scope": 641,
            "src": "1009:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
              "typeString": "struct Passport.PassportToken[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 360,
                "name": "PassportToken",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 351,
                "src": "1009:13:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                  "typeString": "struct Passport.PassportToken"
                }
              },
              "id": 361,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1009:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage_ptr",
                "typeString": "struct Passport.PassportToken[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 366,
            "name": "countryRegistrationSuccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "indexed": false,
                  "name": "countryCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1093:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:20:2"
            },
            "src": "1060:53:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 370,
            "name": "passportCreationSuccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "1149:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1148:13:2"
            },
            "src": "1119:43:2"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "1732:152:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "countryList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "1743:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                          "typeString": "mapping(address => struct Passport.Country storage ref)"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "1755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1743:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_storage",
                        "typeString": "struct Passport.Country storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1774:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "id": 384,
                          "name": "countryCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "1780:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 382,
                        "name": "Country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1766:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Country_$329_storage_ptr_$",
                          "typeString": "type(struct Passport.Country storage pointer)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1766:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_memory",
                        "typeString": "struct Passport.Country memory"
                      }
                    },
                    "src": "1743:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Country_$329_storage",
                      "typeString": "struct Passport.Country storage ref"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "1813:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 388,
                      "name": "addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "1803:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "countryCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1864:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 392,
                      "name": "countryRegistrationSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1837:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "EmitStatement",
                  "src": "1832:44:2"
                }
              ]
            },
            "documentation": "Add new country - to list + as minter\n Create passport\n All passports are owned by the country right? Yup\n Indiv user is just read only?\n They will read only through the UI that we provide right? Yup the country that they are in will own the passport",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 376,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 572,
                  "src": "1607:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:11:2"
              }
            ],
            "name": "registerCountry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1538:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "name": "countryCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "1555:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1537:44:2"
            },
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:2"
            },
            "scope": 641,
            "src": "1513:371:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "1965:536:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 405,
                            "name": "passportUUIDMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1998:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 407,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 406,
                            "name": "UUID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "2018:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1998:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2027:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1998:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d20412070617373706f72742077697468207468697320555549442068617320616c7265616479206265656e2063726561746564",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:60:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_338f9ae7794041901d4d64df04eae6c077105e2c0e89ab54908b7481d4d21af8",
                          "typeString": "literal_string \"[ERROR] A passport with this UUID has already been created\""
                        },
                        "value": "[ERROR] A passport with this UUID has already been created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_338f9ae7794041901d4d64df04eae6c077105e2c0e89ab54908b7481d4d21af8",
                          "typeString": "literal_string \"[ERROR] A passport with this UUID has already been created\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "1976:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:138:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:138:2"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "name": "_newPassport",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "2127:33:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                        "typeString": "struct Passport.PassportToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 413,
                        "name": "PassportToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2127:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                          "typeString": "struct Passport.PassportToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2127:33:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2171:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 341,
                      "src": "2171:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2195:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2171:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2210:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "travelRecordLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 348,
                      "src": "2210:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2244:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2210:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2256:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "issuingCountry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 350,
                      "src": "2256:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2690,
                        "src": "2286:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2286:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2256:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:40:2"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "name": "_passportId",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "2309:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "_newPassport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "2354:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                          "typeString": "struct Passport.PassportToken memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "passportTokenList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2331:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                          "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2331:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PassportToken_$351_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Passport.PassportToken storage ref) returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "passportUUIDMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "2378:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 444,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "UUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "2398:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2378:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "_passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "2406:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2378:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2690,
                          "src": "2434:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2434:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 451,
                        "name": "_passportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "2446:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 448,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1972
                      ],
                      "referencedDeclaration": 1972,
                      "src": "2428:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 402,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 401,
                  "name": "onlyVerifiedCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 585,
                  "src": "1943:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:21:2"
              }
            ],
            "name": "createPassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "1916:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1915:20:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:0:2"
            },
            "scope": 641,
            "src": "1892:609:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "2558:297:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "passportUUIDMapping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "2591:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 463,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "UUID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "2611:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2591:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2620:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2591:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d204e6f20737563682070617373706f727420686173206265656e2063726561746564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2636:43:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9fcf43eeec135c0beb140e05c411f617728bd3f17db531a79c61a99c03c489",
                          "typeString": "literal_string \"[ERROR] No such passport has been created\""
                        },
                        "value": "[ERROR] No such passport has been created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9fcf43eeec135c0beb140e05c411f617728bd3f17db531a79c61a99c03c489",
                          "typeString": "literal_string \"[ERROR] No such passport has been created\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "2569:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:121:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:121:2"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "name": "passportToView",
                      "nodeType": "VariableDeclaration",
                      "scope": 477,
                      "src": "2701:35:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PassportToken_$351_memory_ptr",
                        "typeString": "struct Passport.PassportToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 469,
                        "name": "PassportToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 351,
                        "src": "2701:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage_ptr",
                          "typeString": "struct Passport.PassportToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 471,
                      "name": "passportTokenList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "2739:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                        "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                      }
                    },
                    "id": 475,
                    "indexExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 472,
                        "name": "passportUUIDMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "2757:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 474,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "UUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2777:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2757:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2739:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                      "typeString": "struct Passport.PassportToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2701:82:2"
                }
              ]
            },
            "documentation": null,
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewPassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "2531:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2530:20:2"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2558:0:2"
            },
            "scope": 641,
            "src": "2509:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "2962:260:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 487,
                              "name": "passportTokenList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "2995:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                                "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                              }
                            },
                            "id": 493,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 488,
                                  "name": "passportUUIDMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "3013:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                    "typeString": "mapping(string memory => uint256)"
                                  }
                                },
                                "id": 490,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 489,
                                  "name": "UUID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "3033:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3013:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3041:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3013:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2995:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                              "typeString": "struct Passport.PassportToken storage ref"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 341,
                          "src": "2995:57:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3056:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2995:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d205468652070617373706f7274207769746820746869732055554944206d75737420626520616374697665",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3075:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e26dbc7514bf7988a11f1ecc9692a815a94b9f9ead790863cb7ea676807c5a6",
                          "typeString": "literal_string \"[ERROR] The passport with this UUID must be active\""
                        },
                        "value": "[ERROR] The passport with this UUID must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e26dbc7514bf7988a11f1ecc9692a815a94b9f9ead790863cb7ea676807c5a6",
                          "typeString": "literal_string \"[ERROR] The passport with this UUID must be active\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "2973:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:165:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:165:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 500,
                          "name": "passportTokenList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "3149:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                            "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                          }
                        },
                        "id": 506,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 501,
                              "name": "passportUUIDMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3167:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 503,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 502,
                              "name": "UUID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3187:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3167:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3195:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3167:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3149:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                          "typeString": "struct Passport.PassportToken storage ref"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 341,
                      "src": "3149:57:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3209:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3149:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:65:2"
                }
              ]
            },
            "documentation": null,
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 483,
                    "name": "UUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 480,
                    "src": "2951:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 482,
                  "name": "onlyIssuingCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 622,
                  "src": "2932:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2932:24:2"
              }
            ],
            "name": "freezePassport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "2887:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2886:20:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:0:2"
            },
            "scope": 641,
            "src": "2863:359:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "3374:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 521,
                    "name": "UUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "3368:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 522,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyOwnerCountry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 640,
                  "src": "3351:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3351:22:2"
              }
            ],
            "name": "addTravelHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3266:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3295:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Action_$332",
                    "typeString": "enum Passport.Action"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 515,
                    "name": "Action",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 332,
                    "src": "3295:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Action_$332",
                      "typeString": "enum Passport.Action"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3319:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:88:2"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3374:0:2"
            },
            "scope": 641,
            "src": "3230:146:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "3642:222:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 533,
                              "name": "countryList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "3675:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                                "typeString": "mapping(address => struct Passport.Country storage ref)"
                              }
                            },
                            "id": 535,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 534,
                              "name": "countryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "3687:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3675:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$329_storage",
                              "typeString": "struct Passport.Country storage ref"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isVerifiedCountry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 326,
                          "src": "3675:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3724:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3675:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b4552524f525d204e6f207375636820636f756e74727920686173206265656e2072656769737465726564",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3743:45:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92528aef8317071c4220ea30f02f13e4cfb0c273c7893d0432a6c97cfc9419b2",
                          "typeString": "literal_string \"[ERROR] No such country has been registered\""
                        },
                        "value": "[ERROR] No such country has been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92528aef8317071c4220ea30f02f13e4cfb0c273c7893d0432a6c97cfc9419b2",
                          "typeString": "literal_string \"[ERROR] No such country has been registered\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "3653:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3653:146:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "3653:146:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "countryList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3817:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                          "typeString": "mapping(address => struct Passport.Country storage ref)"
                        }
                      },
                      "id": 544,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 543,
                        "name": "countryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "3829:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3817:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Country_$329_storage",
                        "typeString": "struct Passport.Country storage ref"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "countryCode",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 328,
                    "src": "3817:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 531,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "3810:46:2"
                }
              ]
            },
            "documentation": null,
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewRegisteredCountry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "countryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "3550:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3550:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3549:24:2"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "3622:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3621:15:2"
            },
            "scope": 641,
            "src": "3519:345:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "3923:63:2",
              "statements": [
                {
                  "assignments": [
                    554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 554,
                      "name": "hi",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "3934:16:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 553,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3934:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "616263",
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3953:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c45",
                      "typeString": "literal_string \"abc\""
                    },
                    "value": "abc"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3934:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 557,
                    "name": "hi",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 554,
                    "src": "3976:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 552,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "3969:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3884:2:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "3908:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3907:15:2"
            },
            "scope": 641,
            "src": "3872:114:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "4048:99:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4067:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4067:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4081:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4067:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d204f776e6572205265717569726564",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4089:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de40039762e96dc70ca3a07e47a867130427998867203e2b7f14735c505c3a4b",
                          "typeString": "literal_string \"[INVALID PERMISSION] Owner Required\""
                        },
                        "value": "[INVALID PERMISSION] Owner Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de40039762e96dc70ca3a07e47a867130427998867203e2b7f14735c505c3a4b",
                          "typeString": "literal_string \"[INVALID PERMISSION] Owner Required\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4059:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:68:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:68:2"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4138:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 572,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4045:2:2"
            },
            "src": "4027:120:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 584,
              "nodeType": "Block",
              "src": "4186:168:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "countryList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "4219:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Country_$329_storage_$",
                              "typeString": "mapping(address => struct Passport.Country storage ref)"
                            }
                          },
                          "id": 578,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 576,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2690,
                              "src": "4231:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4231:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4219:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$329_storage",
                            "typeString": "struct Passport.Country storage ref"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isVerifiedCountry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 326,
                        "src": "4219:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d20566572696669656420436f756e747279205265717569726564",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4275:48:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8648fe4ee728e551e6daa546fe5adf666ad6969d21a3dd4ae8caf6493bc3a75c",
                          "typeString": "literal_string \"[INVALID PERMISSION] Verified Country Required\""
                        },
                        "value": "[INVALID PERMISSION] Verified Country Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8648fe4ee728e551e6daa546fe5adf666ad6969d21a3dd4ae8caf6493bc3a75c",
                          "typeString": "literal_string \"[INVALID PERMISSION] Verified Country Required\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4197:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:137:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "4197:137:2"
                },
                {
                  "id": 583,
                  "nodeType": "PlaceholderStatement",
                  "src": "4345:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 585,
            "name": "onlyVerifiedCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4183:2:2"
            },
            "src": "4155:199:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "4404:178:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 591,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4449:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 593,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 592,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "4469:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4449:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 590,
                            "name": "getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1324
                            ],
                            "referencedDeclaration": 1324,
                            "src": "4437:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4437:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4479:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4479:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4437:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d20417070726f7665642053656e646572205265717569726564",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:47:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29482816b56b4909006f95bcc354bcb66f88a91bfc21a15ac9c9a73eb6439a37",
                          "typeString": "literal_string \"[INVALID PERMISSION] Approved Sender Required\""
                        },
                        "value": "[INVALID PERMISSION] Approved Sender Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29482816b56b4909006f95bcc354bcb66f88a91bfc21a15ac9c9a73eb6439a37",
                          "typeString": "literal_string \"[INVALID PERMISSION] Approved Sender Required\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4415:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4415:147:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:147:2"
                },
                {
                  "id": 601,
                  "nodeType": "PlaceholderStatement",
                  "src": "4573:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 603,
            "name": "onlyApproved",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "4384:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4383:20:2"
            },
            "src": "4362:220:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "4638:231:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 608,
                              "name": "passportTokenList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "4671:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PassportToken_$351_storage_$dyn_storage",
                                "typeString": "struct Passport.PassportToken storage ref[] storage ref"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 609,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4689:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 611,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 610,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 605,
                                "src": "4709:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4689:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4671:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassportToken_$351_storage",
                              "typeString": "struct Passport.PassportToken storage ref"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuingCountry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 350,
                          "src": "4671:59:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4751:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4751:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4671:90:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e2049737375696e6720436f756e747279205265717569726564",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4776:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6550c3ffb695a43fccf5f47527e5dad1b5468fe822c3a4637828b9a80bfb8f07",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Issuing Country Required\""
                        },
                        "value": "[INVALID PERMISSION] Passport Token Issuing Country Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6550c3ffb695a43fccf5f47527e5dad1b5468fe822c3a4637828b9a80bfb8f07",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Issuing Country Required\""
                        }
                      ],
                      "id": 607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:200:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:200:2"
                },
                {
                  "id": 620,
                  "nodeType": "PlaceholderStatement",
                  "src": "4860:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 622,
            "name": "onlyIssuingCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "4618:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4618:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4617:20:2"
            },
            "src": "4590:279:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "4923:179:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 628,
                                "name": "passportUUIDMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4964:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 630,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "UUID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4984:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4964:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 627,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1258
                            ],
                            "referencedDeclaration": 1258,
                            "src": "4956:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4956:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2690,
                            "src": "4994:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4994:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4956:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b494e56414c4944205045524d495353494f4e5d2050617373706f727420546f6b656e204f776e6572205265717569726564",
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5019:52:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c2fcad71130f43ea61017a56d5491d19f0578446f32f1540cc1d3bde8e43a52",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Owner Required\""
                        },
                        "value": "[INVALID PERMISSION] Passport Token Owner Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c2fcad71130f43ea61017a56d5491d19f0578446f32f1540cc1d3bde8e43a52",
                          "typeString": "literal_string \"[INVALID PERMISSION] Passport Token Owner Required\""
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2694
                      ],
                      "referencedDeclaration": 2694,
                      "src": "4934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4934:148:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "4934:148:2"
                },
                {
                  "id": 638,
                  "nodeType": "PlaceholderStatement",
                  "src": "5093:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "name": "onlyOwnerCountry",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "name": "UUID",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "4903:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4903:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4902:20:2"
            },
            "src": "4877:225:2",
            "visibility": "internal"
          }
        ],
        "scope": 642,
        "src": "222:4885:2"
      }
    ],
    "src": "0:5109:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1584855437942": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x4deffd3c5a1de60d7fa261c9c0f6c9b4ecedf6547b59276231029009e3a7f57a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "countryCode",
              "type": "string"
            }
          ],
          "name": "countryRegistrationSuccess",
          "type": "event"
        },
        "0x9f3658ff93f3f5fa1b05880d02ec34ff0efe7fd2bbc4821a6f299fef45820572": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "UUID",
              "type": "string"
            }
          ],
          "name": "passportCreationSuccess",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBB4647B256574B5990E82996f22d36cd50300968",
      "transactionHash": "0x1348a8e520c571838b42aec6435bf679100fab751290a053f435a2db920e530e"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-22T05:39:04.011Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeMint(address,uint256)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeMint(address,uint256,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "_data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "registerCountry(address,string)": {
        "notice": "Add new country - to list + as minter Create passport All passports are owned by the country right? Yup Indiv user is just read only? They will read only through the UI that we provide right? Yup the country that they are in will own the passport"
      }
    }
  }
}